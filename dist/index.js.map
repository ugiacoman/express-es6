{"version":3,"sources":["../src/index.js"],"names":["app","disable","set","join","__dirname","use","skip","get","json","urlencoded","extended","req","res","next","err","Error","status","render","message","PORT","process","env","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA;;AAEA,MAAMA,MAAM,wBAAZ;AACAA,IAAIC,OAAJ,CAAY,cAAZ;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,OAAR,EAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACAJ,IAAIE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAF,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,EAAc;AACpBC,QAAM,MAAMN,IAAIO,GAAJ,CAAQ,KAAR,MAAmB;AADX,CAAd,CAAR;AAGAP,IAAIK,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;AACAR,IAAIK,GAAJ,CAAQ,qBAAWI,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA;;AAEA;AACA;;AAEA;AACAV,IAAIK,GAAJ,CAAQ,CAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAd,IAAIK,GAAJ,CAAQ,CAACS,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAAE;AACjCD,MACGI,MADH,CACUF,IAAIE,MAAJ,IAAc,GADxB,EAEGC,MAFH,CAEU,OAFV,EAEmB;AACfC,aAASJ,IAAII;AADE,GAFnB;AAKD,CAND;;AAQA,MAAM,EAAEC,OAAO,IAAT,KAAkBC,QAAQC,GAAhC;AACArB,IAAIsB,MAAJ,CAAWH,IAAX,EAAiB,MAAMI,QAAQC,GAAR,CAAa,qBAAoBL,IAAK,EAAtC,CAAvB,E,CAAiE","file":"index.js","sourcesContent":["import express from 'express'\nimport logger from 'morgan'\nimport path from 'path'\nimport bodyParser from 'body-parser'\n// import routes from './routes'\n\nconst app = express()\napp.disable('x-powered-by')\n\n// View engine setup\napp.set('views', path.join(__dirname, '../views'))\napp.set('view engine', 'pug')\n\napp.use(logger('dev', {\n  skip: () => app.get('env') === 'test'\n}))\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: false }))\n// app.use(express.static(path.join(__dirname, '../public')))\n\n// Routes\n// app.use('/', routes)\n\n// Catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error('Not Found')\n  err.status = 404\n  next(err)\n})\n\n// Error handler\napp.use((err, req, res, next) => { // eslint-disable-line no-unused-vars\n  res\n    .status(err.status || 500)\n    .render('error', {\n      message: err.message\n    })\n})\n\nconst { PORT = 8080 } = process.env\napp.listen(PORT, () => console.log(`Listening on port ${PORT}`)) // eslint-disable-line no-console\n"]}